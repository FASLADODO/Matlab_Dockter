%Thanks Internet!
%http://www.mathworks.com/help/matlab/visualize/representing-a-matrix-as-a-surface.html

%Generate unevenly sampled data within the range [-8, 8] and use it to evaluate the function:
x = rand(100,1)*16 - 8;
y = rand(100,1)*16 - 8;
r = sqrt(x.^2 + y.^2) + eps;
z = sin(r)./r;
%The linspace function provides a convenient way to create uniformly spaced data with the desired number of elements. The following statements produce vectors over the range of the random data with the same resolution as that generated by the -8:.5:8 statement in the previous sinc example:
xlin = linspace(min(x),max(x),33);
ylin = linspace(min(y),max(y),33);
%Now use these points to generate a uniformly spaced grid:
[X,Y] = meshgrid(xlin,ylin);
%The key to this process is to use scatteredInterpolant to interpolate the values of the function at the uniformly spaced points, based on the values of the function at the original data points (which are random in this example). This statement uses the default linear interpolation to generate the new data:
f = scatteredInterpolant(x,y,z);
Z = f(X,Y);
%Plot the interpolated and the nonuniform data to produce:
figure
mesh(X,Y,Z) %interpolated
axis tight; hold on
plot3(x,y,z,'.','MarkerSize',15) %nonuniform